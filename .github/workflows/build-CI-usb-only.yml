name: N1-OpenWrt-CI_for-usb-only_no-install-shell

on:
  schedule:
    - cron: '0 0 15 * *'
      
  workflow_dispatch: 
  
  #watch:
  #  types: started    
  #repository_dispatch:
  #  types: 'run'
    
env:
  TZ: 'Asia/Shanghai'

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id
    #if: github.event_name == 'schedule' || github.event.action == 'run'

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Install depends
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /usr/lib/jvm /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
      - name: Clone Lean's openwrt
        run: |
          git clone https://github.com/coolsnowwolf/lede
      - name: Install feeds & Make config
        env:
          CONFIG: '.github/config.udisk_only_no_wifi'
        run: |
          chmod +x $CONFIG
          ./$CONFIG
      - name: Compile openwrt
        run: |
          cd lede
          make download -j8
          make -j$(nproc) || make -j1 V=s
      - name: Build firmware
        run: |
          ls -l lede/bin/targets/*/*/*.tar.gz
          cp lede/bin/targets/*/*/*.tar.gz ./openwrt
          sudo ./make -d
          
          i=0
          cd out
          for x in $(ls .); do
            cd $x
            filename=$(ls .)
            filename=${filename%.*}
            gzip *.img
            ls -l
            cd ../
            echo "firmware_$x=$filename" >> $GITHUB_ENV
          done
          
      - name: Upload firmware @ kernel 5.4.60
        uses: actions/upload-artifact@main
        with:
          name: ${{ env.firmware_1 }}_for_udisk
          path: out/5.4.60
          

      #- name: Upload firmware @ kernel 4.19.134
      #  uses: actions/upload-artifact@main
      #  with:
      #    name: ${{ env.firmware_1 }}
      #    path: out/4.19.134
      
      #- name: Upload firmware @ kernel 5.4.50
      #  uses: actions/upload-artifact@main
      #  with:
      #    name: ${{ env.firmware_2 }}
      #    path: out/5.4.50

      - name: Upload config file
        uses: actions/upload-artifact@main
        with:
          name: config
          path: lede/.config
